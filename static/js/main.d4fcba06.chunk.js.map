{"version":3,"sources":["serviceWorker.js","data/illustrationData.js","Components/IllustrationGallery.js","data/comicsData.js","Components/ComicsGallery.js","Components/Home.js","Components/Temporary.js","common/Header.js","common/Footer.js","Components/IllustrationPage.js","Components/ComicPage.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","catch","error","console","message","illustrations","mermay","thumbSrc","src","title","subtitle","description","poisonous","trees","worldCup","christmas","getIllustrations","IllustrationGallery","props","id","className","Object","keys","map","key","index","illustration","to","process","comics","myalo","coverSrc","page1src","page2src","page3src","croissanakia","getComics","ComicsGallery","comic","Home","Temporary","Header","state","Component","Footer","IllustrationPage","params","onoma","ComicPage","App","exact","component","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4fcba06.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst illustrations = {\r\n  mermay: {\r\n    thumbSrc: \"/img/IllustrationThumb0.jpg\",\r\n    src: \"/img/illustrations/Mermay10.jpg\",\r\n    title: \"Mermaid has feelings\",\r\n    subtitle: \"Mermay challenge, 2018\",\r\n    description: \"Personal project\"\r\n  },\r\n  poisonous: {\r\n    thumbSrc: \"/img/IllustrationThumb1.jpg\",\r\n    src: \"/img/illustrations/Mermay10.jpg\",\r\n    title: \"Poisonous\",\r\n    subtitle: \"Made for the Inktober challenge, 2018\",\r\n    description: \"Personal project\"\r\n  },\r\n  trees: {\r\n    thumbSrc: \"/img/IllustrationThumb2.jpg\",\r\n    src: \"/img/illustrations/Mermay10.jpg\",\r\n    title: \"Trees\",\r\n    subtitle: \"Made for the Trees exhibition, 2018\",\r\n    description: \"Exhibition lorem ipsum dolor sit amet\"\r\n  },\r\n  worldCup: {\r\n    thumbSrc: \"/img/IllustrationThumb3.jpg\",\r\n    src: \"/img/illustrations/Mermay10.jpg\",\r\n    title: \"Poland - Colombia\",\r\n    subtitle: \"Illustration Practice based on a photograph, 2018\",\r\n    description: \"Personal project\"\r\n  },\r\n  christmas: {\r\n    thumbSrc: \"/img/IllustrationThumb4.jpg\",\r\n    src: \"/img/illustrations/Mermay10.jpg\",\r\n    title: \"Christmas Jazz\",\r\n    subtitle: \"Poster Design for a school concert\",\r\n    description:\r\n      \"Designed for the Christmas concert by the children's choir of an elementary school\"\r\n  }\r\n};\r\n\r\nexport function getIllustrations() {\r\n  return illustrations;\r\n}\r\n","import React from \"react\";\r\nimport * as serviceWorker from \"../serviceWorker\";\r\nimport { getIllustrations } from \"../data/illustrationData\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst illustrations = getIllustrations();\r\n\r\nconst IllustrationGallery = props => {\r\n  return (\r\n    <div id=\"illustration\">\r\n      <div className=\"container p-3\">\r\n        <h1 id=\"pageTitle\">Εικονογράφηση</h1>\r\n        {Object.keys(illustrations).map((key, index) => {\r\n          const illustration = illustrations[key];\r\n          return (\r\n            <Link to={`illustration/${key}`} key={key}>\r\n              <img\r\n                className=\"col-6 col-md-4 p-2\"\r\n                src={process.env.PUBLIC_URL + illustration.thumbSrc}\r\n              />\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IllustrationGallery;\r\n\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\n\r\nconst comics = {\r\n  myalo: {\r\n    coverSrc: \"/img/comicCovers/MyaloCover.jpg\",\r\n    src: \"/img/illustrations/Mermay10.jpg\",\r\n    title: \"Το Μυαλό μου και μία Λίρα\",\r\n    subtitle: \"2019 | 44 σελίδες | zine | αυτοβιογραφικό\",\r\n    description:\r\n      \"Αυτό το κόμικ είναι έτσι κι αλλιώς, προέκυψε κάπως και μιλάει για τα τάδε θέματα. Μικρή περιγραφή ανάμεσα στο εξώφυλλο και τα δείγματα των σελίδων.  Curabitur nec leo imperdiet, consequat leo id, blandit justo. Aenean gravida ex non ligula semper vestibulum. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nullam rhoncus dui eget lacus placerat porttitor. Morbi eget ullamcorper turpis. Sed maximus posuere ipsum, et bibendum ante finibus ac.\",\r\n    page1src: \"/img/comicPages/Myalo_1.jpg\",\r\n    page2src: \"/img/comicPages/Myalo_2.jpg\",\r\n    page3src: \"/img/comicPages/Myalo_3.jpg\"\r\n  },\r\n  croissanakia: {\r\n    coverSrc: \"/img/comicCovers/CroissanakiaCover.jpg\",\r\n    src: \"/img/illustrations/Mermay10.jpg\",\r\n    title: \"Τα Κρουασανάκια δεν είναι τα Ίδια\",\r\n    subtitle: \"24 σελίδες, 2018\",\r\n    description: \"Θανατηφόρα έλξη μπλα μπλα μπλα.\"\r\n  }\r\n};\r\n\r\nexport function getComics() {\r\n  return comics;\r\n}\r\n","import React from \"react\";\r\nimport * as serviceWorker from \"../serviceWorker\";\r\nimport { getComics } from \"../data/comicsData\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst comics = getComics();\r\n\r\nconst ComicsGallery = props => {\r\n  return (\r\n    <div className=\"container p-3\">\r\n      <h1 id=\"pageTitle\">Κόμικς</h1>\r\n      {Object.keys(comics).map((key, index) => {\r\n        const comic = comics[key];\r\n        return (\r\n          <div className=\"col mh-25\">\r\n            <Link to={`comics/${key}`}>\r\n              <img\r\n                className=\"img-fluid\"\r\n                src={process.env.PUBLIC_URL + comic.coverSrc}\r\n              />\r\n            </Link>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComicsGallery;\r\n\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/illustration\">Illustration Gallery</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/comics\">Comics Gallery</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Temporary(props) {\r\n  return (\r\n    <div className=\"d-flex flex-direction-row justify-content-center\">\r\n      Under Construction!\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Temporary;\r\n","import React, { Component } from \"react\";\r\nimport * as serviceWorker from \"../serviceWorker\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <Link to=\"/home/\">\r\n          <img src={process.env.PUBLIC_URL + \"/img/Logo.png\"} />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n\r\nserviceWorker.unregister();\r\n","import React, { Component } from \"react\";\r\nclass Footer extends Component {\r\n  state = {};\r\n  render() {\r\n    return <div className=\"footer\"></div>;\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport * as serviceWorker from \"../serviceWorker\";\r\nimport { getIllustrations } from \"../data/illustrationData\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst illustrations = getIllustrations();\r\n\r\nconst IllustrationPage = props => {\r\n  const key = props.match.params.onoma;\r\n  const illustration = illustrations[key];\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md\">\r\n          <Link to=\"/illustration\">Illustration Gallery</Link>\r\n          <h1 id=\"pageTitle\">{illustration.title}</h1>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-8\">\r\n            <img\r\n              className=\"img-fluid \"\r\n              src={process.env.PUBLIC_URL + illustration.src}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-4\">\r\n            <p id=\"pageSubtitle\">{illustration.subtitle}</p>\r\n            <p id=\"pageDescription\">{illustration.description}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IllustrationPage;\r\n\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport * as serviceWorker from \"../serviceWorker\";\r\nimport { getComics } from \"../data/comicsData\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst comics = getComics();\r\n\r\nconst ComicPage = props => {\r\n  const key = props.match.params.onoma;\r\n  const comic = comics[key];\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <Link to=\"/comics\">Comics Gallery</Link>\r\n        <h1 id=\"pageTitle\">{comic.title}</h1>\r\n        <p id=\"pageSubtitle\">{comic.subtitle}</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <img\r\n          className=\"img-fluid \"\r\n          src={process.env.PUBLIC_URL + comic.coverSrc}\r\n        />\r\n      </div>\r\n      <div className=\"row pt-3\">\r\n        <p id=\"pageDescription\">{comic.description}</p>\r\n      </div>\r\n      <div className=\"row pt-3\">\r\n        <div className=\"col-4\">\r\n          <img\r\n            className=\"img-fluid\"\r\n            src={process.env.PUBLIC_URL + comic.page1src}\r\n          />\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <img\r\n            className=\"img-fluid\"\r\n            src={process.env.PUBLIC_URL + comic.page2src}\r\n          />\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <img\r\n            className=\"img-fluid\"\r\n            src={process.env.PUBLIC_URL + comic.page3src}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicPage;\r\n\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport IllustrationGallery from \"./Components/IllustrationGallery.js\";\r\nimport ComicsGallery from \"./Components/ComicsGallery.js\";\r\nimport Home from \"./Components/Home\";\r\nimport Temporary from \"./Components/Temporary\";\r\nimport Header from \"./common/Header.js\";\r\nimport Footer from \"./common/Footer.js\";\r\nimport { getIllustrations } from \"./data/illustrationData\";\r\nimport IllustrationPage from \"./Components/IllustrationPage.js\";\r\nimport ComicPage from \"./Components/ComicPage.js\";\r\n\r\nconst illustrations = getIllustrations();\r\n\r\nconst App = props => {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Header />\r\n        <div className=\"content container mt-3 mb-3\">\r\n          <Switch>\r\n            <Route exact component={Temporary} path=\"/\" />\r\n            <Route exact component={Home} path=\"/home/\" />\r\n            <Route\r\n              exact\r\n              component={IllustrationGallery}\r\n              path=\"/illustration/\"\r\n            />\r\n            <Route\r\n              exact\r\n              component={IllustrationPage}\r\n              path=\"/illustration/:onoma\"\r\n            />\r\n            <Route exact component={ComicsGallery} path=\"/comics/\" />\r\n            <Route exact component={ComicPage} path=\"/comics/:onoma\" />\r\n          </Switch>\r\n        </div>\r\n        <Footer />\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}